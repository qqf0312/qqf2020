{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "getTransactionReceipt",
  "description": "getTransactionReceipt JSON-RPC method request and response schema.",
  "request": {
    "id": "#request",
    "allOf": [
      {
        "$ref": "jsonrpc-request.json"
      },
      {
        "$ref": "getTransactionReceipt.json#/request/definitions/request-obj"
      }
    ],
    "definitions": {
      "request-obj": {
        "id": "#request-obj",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "getTransactionReceipt"
            ]
          },
          "params": {
            "type": "array",
            "items": [
              {
                "type": "string",
                "description": "DATA, 32 Bytes - Hash of a block."
              }
            ],
            "minItems": 1,
            "maxItems": 1
          }
        }
      }
    }
  },
  "response": {
    "id": "#response",
    "allOf": [
      {
        "$ref": "jsonrpc-response.json"
      },
      {
        "$ref": "getTransactionReceipt.json#/response/definitions/response-obj"
      }
    ],
    "definitions": {
      "response-obj": {
        "id": "#response-obj",
        "properties": {
          "result": {
            "oneOf": [
              {
                "type": "null",
                "description": "When with invalid transaction hash"
              },
              {
                "type": "object",
                "properties": {
                  "transactionHash": {
                    "type": "string",
                    "description": "DATA, 32 Bytes - hash of the transaction."
                  },
                  "transactionIndex": {
                    "type": "string",
                    "description": "QUANTITY - transaction index in the block."
                  },
                  "blockHash": {
                    "type": "string",
                    "description": "DATA, 32 Bytes - hash of the block where this transaction was in. null when its not in block."
                  },
                  "blockNumber": {
                    "type": "string",
                    "description": "QUANTITY - block number where this transaction was in. null when its not in block"
                  },
                  "cumulativeQuotaUsed": {
                    "type": "string",
                    "description": "QUANTITY - The total amount of quota used when this transaction was executed in the block."
                  },
                  "quotaUsed": {
                    "type": "string",
                    "description": "QUANTITY - The amount of quota used by this specific transaction alone."
                  },
                  "contractAddress": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "DATA, 20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null."
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "logs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "topics": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "data": {
                          "type": "string"
                        },
                        "blockHash": {
                          "type": "string"
                        },
                        "blockNumber": {
                          "type": "string"
                        },
                        "transactionHash": {
                          "type": "string"
                        },
                        "transactionIndex": {
                          "type": "string"
                        },
                        "logIndex": {
                          "type": "string"
                        },
                        "transactionLogIndex": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "topics",
                        "data",
                        "blockHash",
                        "blockNumber",
                        "transactionHash",
                        "transactionIndex",
                        "logIndex",
                        "transactionLogIndex"
                      ]
                    }
                  },
                  "root": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "DATA 32 bytes of post-transaction stateroot."
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "errorMessage": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "error message, optional"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "transactionHash",
                  "transactionIndex",
                  "blockHash",
                  "blockNumber",
                  "cumulativeQuotaUsed",
                  "quotaUsed",
                  "contractAddress",
                  "logs",
                  "root",
                  "errorMessage"
                ]
              }
            ]
          }
        }
      }
    }
  }
}
